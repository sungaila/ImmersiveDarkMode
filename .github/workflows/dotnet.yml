# This workflow will build a .NET project
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-net

name: CI

on:
  workflow_dispatch:
    inputs:
      build_configuration:
        type: choice
        description: Build configuration
        options: 
        - Debug
        - Release
        required: true
        default: 'Debug'
      run_build:
        type: boolean
        description: Run build
        required: true
        default: true
      run_sonarcloud:
        type: boolean
        description: Run SonarCloud
        required: true
        default: true
  push:
    branches:
      - 'master'
  pull_request:
    branches:
      - '**'

jobs:
  build:
    name: Build
    runs-on: windows-latest
    if: (github.event_name != 'workflow_dispatch' && true || inputs.run_build) == true
    steps:
      - name: Checkout
        uses: actions/checkout@main
        with:
          fetch-depth: 0
      - name: Setup .NET 6
        uses: actions/setup-dotnet@main
        with:
          dotnet-version: 6.x
      - name: Setup .NET 7
        uses: actions/setup-dotnet@main
        with:
          dotnet-version: 7.x
      - name: Setup .NET 8
        uses: actions/setup-dotnet@main
        with:
          dotnet-version: 8.x
      - name: Restore
        run: dotnet restore ImmersiveDarkMode.sln
      - name: Build
        run: dotnet build ImmersiveDarkMode.sln --configuration ${{ github.event_name != 'workflow_dispatch' && 'Debug' || inputs.build_configuration }} --property:VersionSuffix=ci
      - name: Pack
        run: dotnet pack ImmersiveDarkMode.sln --configuration ${{ github.event_name != 'workflow_dispatch' && 'Debug' || inputs.build_configuration }} --property:VersionSuffix=ci
      - name: Publish libraries
        uses: actions/upload-artifact@v4
        with:
          name: Library assemblies
          path: |
            src/Core/bin/${{ github.event_name != 'workflow_dispatch' && 'Debug' || inputs.build_configuration }}
            src/WinUI/bin/${{ github.event_name != 'workflow_dispatch' && 'Debug' || inputs.build_configuration }}
            src/Wpf/bin/${{ github.event_name != 'workflow_dispatch' && 'Debug' || inputs.build_configuration }}
            !**/*.nupkg
            !**/*.snupkg
          if-no-files-found: error
      - name: Publish NuGet packages
        uses: actions/upload-artifact@v4
        with:
          name: NuGet packages
          path: |
            src/Core/bin/${{ github.event_name != 'workflow_dispatch' && 'Debug' || inputs.build_configuration }}/*.nupkg
            src/Core/bin/${{ github.event_name != 'workflow_dispatch' && 'Debug' || inputs.build_configuration }}/*.snupkg
            src/WinUI/bin/${{ github.event_name != 'workflow_dispatch' && 'Debug' || inputs.build_configuration }}/*.nupkg
            src/WinUI/bin/${{ github.event_name != 'workflow_dispatch' && 'Debug' || inputs.build_configuration }}/*.snupkg
            src/Wpf/bin/${{ github.event_name != 'workflow_dispatch' && 'Debug' || inputs.build_configuration }}/*.nupkg
            src/Wpf/bin/${{ github.event_name != 'workflow_dispatch' && 'Debug' || inputs.build_configuration }}/*.snupkg
          if-no-files-found: error
  sonarcloud:
    name: SonarCloud
    runs-on: windows-latest
    if: (github.repository == 'sungaila/ImmersiveDarkMode' && success()) && (github.event_name != 'workflow_dispatch' && true || inputs.run_sonarcloud) == true
    steps:
      - name: Checkout
        uses: actions/checkout@main
        with:
          fetch-depth: 0
      - name: Setup .NET 6
        uses: actions/setup-dotnet@main
        with:
           dotnet-version: 6.x
      - name: Setup .NET 7
        uses: actions/setup-dotnet@main
        with:
          dotnet-version: 7.x
      - name: Setup .NET 8
        uses: actions/setup-dotnet@main
        with:
          dotnet-version: 8.x
      - name: Setup dotnet-coverage
        run: dotnet tool install --global dotnet-coverage
      - name: Setup JDK 17
        uses: actions/setup-java@main
        with:
          java-version: 17
          java-package: jdk
          distribution: 'zulu'
      - name: Cache SonarCloud packages
        uses: actions/cache@v3
        with:
          path: ~\sonar\cache
          key: ${{ runner.os }}-sonar
          restore-keys: ${{ runner.os }}-sonar
      - name: Cache SonarCloud scanner
        id: cache-sonar-scanner
        uses: actions/cache@v3
        with:
          path: .\.sonar\scanner
          key: ${{ runner.os }}-sonar-scanner
          restore-keys: ${{ runner.os }}-sonar-scanner
      - name: Install SonarCloud scanner
        if: steps.cache-sonar-scanner.outputs.cache-hit != 'true'
        shell: powershell
        run: |
          New-Item -Path .\.sonar\scanner -ItemType Directory
          dotnet tool update dotnet-sonarscanner --tool-path .\.sonar\scanner
      - name: Analyze
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}  # Needed to get PR information, if any
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
        shell: powershell
        run: |
          .\.sonar\scanner\dotnet-sonarscanner begin /k:"sungaila_ImmersiveDarkMode" /o:"sungaila" /d:sonar.token="${{ secrets.SONAR_TOKEN }}" /d:sonar.host.url="https://sonarcloud.io" /d:sonar.cs.vscoveragexml.reportsPaths=coverage.xml
          dotnet restore ImmersiveDarkMode.sln
          dotnet build  ImmersiveDarkMode.sln --configuration ${{ github.event_name != 'workflow_dispatch' && 'Debug' || inputs.build_configuration }}
          .\.sonar\scanner\dotnet-sonarscanner end /d:sonar.token="${{ secrets.SONAR_TOKEN }}"
